AWSTemplateFormatVersion: "2010-09-09"
Transform: AWS::Serverless-2016-10-31
Description: deploys resources for cross account pipeline in target accounts
Globals:
  Function:
    Timeout: 300

Parameters:
  Env:
    Description: Environment type.
    Type: String
    AllowedValues: [prod, dev, int]
    ConstraintDescription: must specify prod, dev, or int.

  Prefix:
    Description: prject prefix
    Type: String
    Default: CAST-

  PrefixLowercase:
    Description: prject prefix
    Type: String
    Default: cast-

Resources:
  ArtifactBucket:
    Type: AWS::S3::Bucket
    Properties:
      AccessControl: Private
      BucketName: !Sub ${PrefixLowercase}artifact-bucket-${Env}

  DeployerRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: !Sub ${Prefix}DeployerRole-${Env}
      ManagedPolicyArns:
        - "arn:aws:iam::aws:policy/AWSCloudFormationFullAccess"
      AssumeRolePolicyDocument:
        Statement:
          - Effect: Allow
            Principal:
              AWS: arn:aws:iam::214364534595:role/codebuild-service-role-auto
            Action:
              - sts:AssumeRole

  AccessArtifactBucket:
    Type: AWS::IAM::Policy
    Properties:
      Roles:
        - !Ref DeployerRole
      PolicyName: !Sub ${Prefix}AccessArtifactBucket-${Env}
      PolicyDocument:
        Version: 2012-10-17
        Statement:
          - Action:
              - s3:GetObject*
              - s3:GetBucket*
              - s3:GetEncryptionConfiguration
              - s3:List*
              - s3:DeleteObject*
              - s3:PutObject*
              - s3:Abort*
            Resource:
              - !Sub arn:aws:s3:::${PrefixLowercase}artifact-bucket-${Env}
              - !Sub arn:aws:s3:::${PrefixLowercase}artifact-bucket-${Env}/*
              - arn:aws:s3:::cost-reporting-vw # MAIN DEV bukcet 
              - arn:aws:s3:::cost-reporting-vw/* 
              - arn:aws:s3:::cast-deployment # MAIN PROD BUCKET
              - arn:aws:s3:::cast-deployment/*


            Effect: Allow

          - Action:
              - kms:Decrypt
              - kms:DescribeKey
              - kms:Encrypt
              - kms:ReEncrypt*
              - kms:GenerateDataKey*
            Resource:
              - !Sub arn:aws:kms:eu-west-1:${AWS::AccountId}:key/AWS_MANAGED_KEY
              # - arn:aws:kms:eu-west-1:936022423514:key/AWS_MANAGED_KEY
            Effect: Allow

  # probably need to be udated according to depoyed resources
  # also restict using Prefix ?
  CreateResourcesPolicy:
    Type: AWS::IAM::Policy
    Properties:
      Roles:
        - !Ref DeployerRole
      PolicyName: !Sub ${Prefix}CreateResourcesPolicy-${Env}
      PolicyDocument:
        Version: 2012-10-17
        Statement:
          - Action:
              - s3:*
            Resource:
              - !Sub arn:aws:s3:::${PrefixLowercase}input-${Env}*
              - !Sub arn:aws:s3:::${PrefixLowercase}output-${Env}*
              - !Sub arn:aws:s3:::${PrefixLowercase}test-${Env}*
            Effect: Allow

          - Action:
              - iam:*
            Resource:
              - !Sub arn:aws:iam::${AWS::AccountId}:role/${Prefix}*
              - !Sub arn:aws:iam::${AWS::AccountId}:policy/${Prefix}*
              - arn:aws:iam::471685057907:role/vw-lambda-reporting-CostReportingFunctionRole-AXA0WJOBOLIW # hardcoded as this role is referenced by external cross-account policies
            Effect: Allow

          - Action:
              - lambda:*
            Resource:
              - !Sub arn:aws:lambda:eu-west-1:${AWS::AccountId}:function:${Prefix}*
              - !Sub arn:aws:lambda:eu-west-1:${AWS::AccountId}:layer:*
              # lambda layers
              - arn:aws:lambda:eu-west-1:770693421928:layer:Klayers-p38-aws-psycopg2:1
              - arn:aws:lambda:eu-west-1:017000801446:layer:AWSLambdaPowertoolsPythonV2:24
              - !Sub arn:aws:lambda:eu-west-1:${AWS::AccountId}:function:* # for manual deployment cases
            Effect: Allow

          - Action:
              - rds:*
            Resource:
              - !Sub arn:aws:rds:eu-west-1:${AWS::AccountId}:*:${PrefixLowercase}*
              - !Sub arn:aws:rds:eu-west-1:${AWS::AccountId}:cluster-pg:default.aurora-postgresql13
              - !Sub arn:aws:rds:eu-west-1:${AWS::AccountId}:*:CAST* # for manual deployment cases
            Effect: Allow

          - Action:
              - ec2:*
            Resource:
              - !Sub arn:aws:ec2:eu-west-1:${AWS::AccountId}:security-group:${PrefixLowercase}*
              - !Sub arn:aws:ec2:eu-west-1:${AWS::AccountId}:subgrp:${PrefixLowercase}*
              - !Sub arn:aws:ec2:eu-west-1:${AWS::AccountId}:security-group:${Prefix}*
              - !Sub arn:aws:ec2:eu-west-1:${AWS::AccountId}:subgrp:${Prefix}*
              - arn:aws:ec2:eu-west-1:471685057907:vpc/vpc-0517670858bad1b7b # DEV VPC
              - !Sub arn:aws:ec2:eu-west-1:${AWS::AccountId}:security-group:*
              - !Sub arn:aws:ec2:eu-west-1:${AWS::AccountId}:* # solved EC2 createSecuGroup

            Effect: Allow

          - Action: # allow describing all Ec2 resources lik VPC and security groups.
              - ec2:Describe*
            Resource:
              - "*"
            Effect: Allow

          - Action:
              - secretsmanager:*
            Resource:
              - !Sub arn:aws:secretsmanager:eu-west-1:${AWS::AccountId}:*
            Effect: Allow

          - Action:
              - cloudwatch:*
            Resource:
              - !Sub arn:aws:cloudwatch:eu-west-1:${AWS::AccountId}:*:*
              - "*"
            Effect: Allow

          - Action:
              - iam:getRolePolicy
            Resource:
              - !Sub arn:aws:iam::${AWS::AccountId}:*
            Effect: Allow

          - Action:
              - secretsmanager:GetRandomPassword
            Resource:
              - "*"
            Effect: Allow

          - Action:
              - events:Describe*
            Resource:
              - "arn:aws:events:eu-west-1:471685057907:rule:*"
            Effect: Allow
