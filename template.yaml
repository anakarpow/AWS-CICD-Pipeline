AWSTemplateFormatVersion: "2010-09-09"
Transform: AWS::Serverless-2016-10-31
Description: >
  SAM Application for DPP cost reporting
Globals:
  Function:
    Timeout: 300

Parameters:
  Env:
    Description: Environment type.
    Type: String
    AllowedValues: [prod, dev, int]
    ConstraintDescription: must specify prod, dev, or int.

  StackId:
    Description: Unique Id for stack, avoids resources name repetition
    Type: String
    Default: -test

  Prefix:
    Description: prject prefix
    Type: String
    Default: CAST-

  PrefixLowercase:
    Description: project prefix
    Type: String
    Default: cast-

  GeneralName:
    Type: String
    Description: project prefix for general naming like stackname
    NoEcho: true

  BillingRole:
    Type: String
    Description: main Lambda role
    NoEcho: false

  ApiRole:
    Type: String
    Description: role to be assumed for customerDB
    NoEcho: false

  BucketInput:
    Type: String
    Description: input bucket for lambdas
    NoEcho: true

  BucketInputBilling:
    Type: String
    Description: input bucket for billing data
    NoEcho: true

  BucketCrossAccount:
    Type: String
    Description: input bucket cross-account data
    NoEcho: true

  BucketInputMetering:
    Type: String
    Description: input bucket for metering data
    NoEcho: true

  BucketOutputMetering:
    Type: String
    Description: output bucket for metering data output
    NoEcho: true

  BucketOutputMeteringDashboard:
    Type: String
    Description: output bucket for Dashboard input data
    NoEcho: true

  BucketOutput:
    Type: String
    Description: input bucket for lambdas output
    NoEcho: true

  VPCId:
    Type: String
    Description: VPC id
    NoEcho: true

  Subnet1:
    Type: String
    Description: Subnet id
    NoEcho: true

  Subnet2:
    Type: String
    Description: Subnet id
    NoEcho: true

  CodeBuild:
    Type: String
    Description: dashboard variable for deployment monitoring
    NoEcho: true

  MeteringApiSM:
    Type: String
    Description: SecretsManager for API token
    NoEcho: true

  StageAccount:
    Type: String
    Description: StageAccountID
    NoEcho: true

  ProxyAccount:
    Type: String
    Description: Proxy AccountID
    NoEcho: true

  # CreateBaseResourcesStatement:
  #   Type: String
  #   Description: to create base resources like buckets
  #   AllowedValues: ["True", "False"]
  #   Default: "False"
  #   NoEcho: true

Conditions:
  ProdResources: !Equals [!Ref Env, prod]
  IntResources: !Equals [!Ref Env, int]
  # CreateBaseResources: !Equals
  #   - !Ref CreateBaseResourcesStatement
  #   - "True"

Resources:
  # maybe have separate bucket template

  # CASTInputBucket:
  #   Type: AWS::S3::Bucket
  #   Condition: CreateBaseResources
  #   Properties:
  #     AccessControl: Private
  #     BucketName: !Sub ${PrefixLowercase}input-${Env}

  # CASTOutputBucket:
  #   Type: AWS::S3::Bucket
  #   Condition: CreateBaseResources
  #   Properties:
  #     AccessControl: Private
  #     BucketName: !Sub ${PrefixLowercase}output-${Env}

  # CASTTestBucket:
  #   Type: AWS::S3::Bucket
  #   Condition: CreateBaseResources
  #   Properties:
  #     AccessControl: Private
  #     BucketName: !Sub ${PrefixLowercase}test-${Env}

  CASTConsumerBucketKMS:
    Type: AWS::IAM::Policy
    Properties:
      PolicyName: !Sub ${Prefix}ConsumerBucketKMS
      PolicyDocument:
        Version: 2012-10-17
        Statement:
          - Sid: DecryptBucketKMS
            Effect: Allow
            Action:
              - kms:GetParametersForImport
              - kms:GetPublicKey
              - kms:GetKeyRotationStatus
              - kms:GetKeyPolicy
              - kms:DescribeKey
            Resource: arn:aws:kms:eu-west-1:471685057907:key/2e775ebe-4f49-4b10-a06b-28a58513e0c4

          - Sid: DescribeKeys
            Effect: Allow
            Action: kms:DescribeCustomKeyStores
            Resource: "*"
      Roles:
        - Ref: BillingRole

  LambdaAssumeAPIRole:
    Type: AWS::IAM::Policy
    Properties:
      PolicyName: !Sub ${Prefix}AssumeAPIRole
      PolicyDocument:
        Version: 2012-10-17
        Statement:
          - Sid: AssumeApiRole
            Effect: Allow
            Action: sts:AssumeRole
            Resource:
              - arn:aws:iam::715146888639:role/dcodev
              - arn:aws:iam::936022423514:role/dcoprod
      Roles:
        - Ref: BillingRole

  LambdaAssumeCERole:
    Type: AWS::IAM::Policy
    Properties:
      PolicyName: !Sub ${Prefix}AssumeCERole
      PolicyDocument:
        Version: 2012-10-17
        Statement:
          - Sid: AssumeCERole
            Action:
              - sts:AssumeRole
            Resource:
              - arn:aws:iam::923514417936:role/CeAndSavingPlansRole
            Effect: Allow
      Roles:
        - Ref: BillingRole

  LambdaAccessSpecialBuckets:
    Type: AWS::IAM::Policy
    Properties:
      PolicyName: !Sub ${Prefix}AccessSpecialBuckets
      PolicyDocument:
        Version: 2012-10-17
        Statement:
          - Sid: AccessBuckets
            Effect: Allow
            Action:
              - s3:GetObject
              - s3:ListBucket
              - s3:PutObject
              - s3:GetBucketLocation
              - s3:PutObjectAcl
            Resource:
              - arn:aws:s3:::vwag-dpp-billing-detailed-billing-reports
              - arn:aws:s3:::vwag-dpp-billing-detailed-billing-reports/*
              - arn:aws:s3:::consumer-bucket-471685057907
              - arn:aws:s3:::consumer-bucket-471685057907/*
              - arn:aws:s3:::crd-input-bucket
              - arn:aws:s3:::crd-input-bucket/*
      Roles:
        - Ref: BillingRole

  CASTDecryptOwnKey:
    Type: AWS::IAM::Policy
    Properties:
      PolicyName: !Sub ${Prefix}DecryptOwnKey
      PolicyDocument:
        Version: 2012-10-17
        Statement:
          - Sid: DecryptKMS
            Effect: Allow
            Action:
              - kms:Decrypt
              - kms:GenerateDataKey
            Resource:
              - arn:aws:kms:eu-west-1:471685057907:key/e8de8941-b7fb-4310-8906-4edd8877facc
      Roles:
        - Ref: BillingRole

  CASTAccessSecrets:
    Type: AWS::IAM::Policy
    Properties:
      PolicyName: !Sub ${Prefix}Secrets
      PolicyDocument:
        Version: 2012-10-17
        Statement:
          - Sid: AccessSecrets
            Effect: Allow
            Action: secretsmanager:GetSecretValue
            Resource: arn:aws:secretsmanager:eu-west-1:471685057907:secret:dpp-dco-CAST-VT5LkZ

          - Sid: AccessExternalSecrets
            Effect: Allow
            Action: secretsmanager:*
            Resource: arn:aws:secretsmanager:eu-west-1:906046731999:*

      Roles:
        - Ref: BillingRole

  CASTHealthService:
    Type: AWS::IAM::Policy
    Properties:
      PolicyName: !Sub ${Prefix}HealthService
      PolicyDocument:
        Version: 2012-10-17
        Statement:
          - Action: sns:Publish
            Resource: arn:aws:sns:eu-west-1:770510210126:dpp_serviceinformation_topic
            Effect: Allow
            Sid: AllowPublishToTopic
          - Action:
              - kms:Decrypt
              - kms:GenerateDataKey
            Resource: arn:aws:kms:eu-west-1:770510210126:*
            Effect: Allow
            Sid: AllowMessageEncryption
      Roles:
        - Ref: BillingRole

  # access to CAST internal credentials in KMS, SM & SSM.
  LambdaInternalCredentials:
    Type: AWS::IAM::Policy
    Properties:
      PolicyName: !Sub ${Prefix}CredentialsInternal
      PolicyDocument:
        Version: 2012-10-17
        Statement:
          - Sid: AccessKMS
            Action:
              - secretsmanager:GetSecretValue
              - kms:Decrypt
              - kms:GenerateDataKey
              - ssm:GetParameter
              - ssm:GetParameters
              - ssm:GetParametersByPath
            Resource:
              - arn:aws:secretsmanager:eu-west-1:*:*
              - arn:aws:kms:eu-west-1:*:*
              - arn:aws:ssm:eu-west-1:*:*
            Effect: Allow
            Condition:
              ForAnyValue:StringEquals:
                aws:ResourceAccount: !Ref StageAccount
      Roles:
        - Ref: BillingRole

  # access to Proxy credentials in KMS, SM & SSM
  LambdaProxyCredentials:
    Type: AWS::IAM::Policy
    Properties:
      PolicyName: !Sub ${Prefix}CredentialsProxy
      PolicyDocument:
        Version: 2012-10-17
        Statement:
          - Sid: Statementa
            Action:
              - secretsmanager:GetSecretValue
              - kms:Decrypt
              - kms:GenerateDataKey
              - ssm:GetParameter
              - ssm:GetParameters
              - ssm:GetParametersByPath
            Resource:
              - arn:aws:secretsmanager:eu-west-1:*:*
              - arn:aws:kms:eu-west-1:*:*
              - arn:aws:ssm:eu-west-1:*:*
            Effect: Allow
            Condition:
              StringEqualsIfExists:
                aws:ResourceAccount: !Ref ProxyAccount
      Roles:
        - Ref: BillingRole

  CASTLambdaPolicyS3:
    Type: AWS::IAM::Policy
    Properties:
      PolicyName: !Sub ${Prefix}MeteringPolicyS3
      PolicyDocument:
        Version: 2012-10-17
        Statement:
          - Sid: STateArt
            Effect: Allow
            Action:
              - s3:PutObject
              - s3:GetObject
              - s3:ListBucket
              - s3:PutObjectTagging
              - s3:GetBucketLocation
            Resource: arn:aws:s3:::*
            Condition:
              StringLikeIfExists:
                aws:ResourceAccount: !Ref StageAccount
      Roles:
        - Ref: BillingRole

  LambdaVPCAccess:
    Type: AWS::IAM::Policy
    Properties:
      PolicyName: !Sub ${Prefix}LambdaVPCAccess
      PolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Action:
              - ec2:DescribeNetworkInterfaces
              - ec2:CreateNetworkInterface
              - ec2:DeleteNetworkInterface
              - ec2:DescribeInstances
              - ec2:AttachNetworkInterface
            Resource:
              - arn:aws:ec2:*:*:vpc/*
            Condition:
              StringLikeIfExists:
                aws:ResourceAccount: !Ref StageAccount
      Roles:
        - Ref: BillingRole

  CostReportingFunction:
    Type: AWS::Serverless::Function
    DependsOn: LambdaVPCAccess
    UpdateReplacePolicy: Retain
    DeletionPolicy: Delete
    Properties:
      FunctionName: !Sub ${Prefix}CRC${StackId}
      Description: CRC -- Reads input and generates Cost Reports
      CodeUri: lambda/
      Role: # reference this ?
        !If [
          ProdResources,
          arn:aws:iam::936022423514:role/CAST-billing,
          arn:aws:iam::471685057907:role/vw-lambda-reporting-CostReportingFunctionRole-AXA0WJOBOLIW,
        ]
      Handler: app.lambda_handler
      Runtime: python3.8
      Timeout: 320
      MemorySize: 2000
      VpcConfig:
        SecurityGroupIds:
          - !GetAtt CASTLambdasSG.GroupId
        SubnetIds:
          - !Ref Subnet1
          - !Ref Subnet2
      Environment:
        Variables:
          BUCKET_INPUT_BILLING: !Ref BucketInputBilling
          BUCKET_INPUT_MANUAL: !Ref BucketInput
          BUCKET_OUTPUT: !Ref BucketOutput
          BUCKET_MERCUR_OUTPUT: !Ref BucketOutputMetering
          BUCKET_MERCUR_OUTPUT_TEST: !Ref BucketOutput
          BUCKET_METERING_DASHBOARD: !Ref BucketOutputMeteringDashboard
          SECRETS_MANAGER: !Ref CASTSecretsManagerDB
          METERING_SM: !Ref MeteringApiSM

          ACCOUNT: !If [ProdResources, PROD, !If [IntResources, INT, DEV]]
          ProxyId: default
          API_ROLE: !Ref ApiRole
          HEALTH_SERVICE_TOPIC:
            !If [
              ProdResources,
              arn:aws:sns:eu-west-1:623853582087:dpp_serviceinformation_topic,
              !If [
                IntResources,
                arn:aws:sns:eu-west-1:714032629611:dpp_serviceinformation_topic,
                arn:aws:sns:eu-west-1:770510210126:dpp_serviceinformation_topic,
              ],
            ]
      Layers:
        - arn:aws:lambda:eu-west-1:770693421928:layer:Klayers-p38-aws-psycopg2:1
        - arn:aws:lambda:eu-west-1:017000801446:layer:AWSLambdaPowertoolsPythonV2:24

  MeteringFunction:
    Type: AWS::Serverless::Function
    DependsOn: LambdaVPCAccess
    UpdateReplacePolicy: Retain
    DeletionPolicy: Delete
    Properties:
      FunctionName: !Sub ${Prefix}MDB${StackId}
      Description: MDB -- Reads input from metering Services and writes it to the DB
      CodeUri: lambda/
      Role:
        !If [
          ProdResources,
          arn:aws:iam::936022423514:role/CAST-billing-test,
          arn:aws:iam::471685057907:role/vw-lambda-reporting-CostReportingFunctionRole-AXA0WJOBOLIW,
        ]
      Handler: app.lambda_handler
      Runtime: python3.8
      Timeout: 60
      MemorySize: 2000
      VpcConfig:
        SecurityGroupIds:
          - !GetAtt CASTLambdasSG.GroupId
        SubnetIds:
          - !Ref Subnet1
          - !Ref Subnet2
      Environment:
        Variables:
          BUCKET_INPUT_METERING: !Ref BucketInputMetering
          BUCKET_INPUT: !Ref BucketInput
          BUCKET_CROSS_ACCOUNT: !Ref BucketCrossAccount
          BUCKET_OUTPUT: !Ref BucketOutput
          SECRETS_MANAGER: !Ref CASTSecretsManagerDB
          ACCOUNT: !If [ProdResources, PROD, !If [IntResources, INT, DEV]]
          API_ROLE: !Ref ApiRole
          AWS_STS_REGIONAL_ENDPOINTS: regional
          ProxyId: default
          HEALTH_SERVICE_TOPIC:
            !If [
              ProdResources,
              arn:aws:sns:eu-west-1:623853582087:dpp_serviceinformation_topic,
              !If [
                IntResources,
                arn:aws:sns:eu-west-1:714032629611:dpp_serviceinformation_topic,
                arn:aws:sns:eu-west-1:770510210126:dpp_serviceinformation_topic,
              ],
            ]
      Layers:
        - arn:aws:lambda:eu-west-1:770693421928:layer:Klayers-p38-aws-psycopg2:1
        - arn:aws:lambda:eu-west-1:017000801446:layer:AWSLambdaPowertoolsPythonV2:24

  #################################################
  #############       INFRA         ###############
  #################################################

  CASTDatabaseSG:
    Type: AWS::EC2::SecurityGroup
    DeletionPolicy: Delete
    Properties:
      GroupName: !Sub ${Prefix}DB-sg${StackId}
      VpcId: !Ref VPCId
      GroupDescription: DPP-CAST security group for DB access

  DBOutbound:
    Type: AWS::EC2::SecurityGroupEgress
    DeletionPolicy: Delete
    Properties:
      Description: Allows connection from DB to Lambdas
      IpProtocol: -1
      GroupId: !Ref CASTDatabaseSG
      DestinationSecurityGroupId: !GetAtt CASTLambdasSG.GroupId

  DBInbound:
    Type: AWS::EC2::SecurityGroupIngress
    Properties:
      Description: allows connection from Lambdas to DB
      IpProtocol: tcp
      FromPort: 5432
      ToPort: 5432
      GroupId: !Ref CASTDatabaseSG
      SourceSecurityGroupId: !GetAtt CASTLambdasSG.GroupId

  CASTLambdasSG:
    Type: AWS::EC2::SecurityGroup
    DependsOn: CASTDatabaseSG
    DeletionPolicy: Delete
    Properties:
      GroupName: !Sub ${Prefix}Lambda-sg${StackId}
      VpcId: !Ref VPCId
      GroupDescription: DPP-CAST security group for Lambda actions
      SecurityGroupEgress:
        - IpProtocol: -1
          CidrIp: 0.0.0.0/0
          Description: allows Lambda connections to other services

  # CASTKmsInterfaceEndpoint:
  #   Type: "AWS::EC2::VPCEndpoint"
  #   Metadata:
  #     Comment: Endpoint to KMS service
  #   Properties:
  #     VpcEndpointType: Interface
  #     ServiceName: !Sub "com.amazonaws.${AWS::Region}.kms"
  #     VpcId: !Ref VPCId
  #     SubnetIds:
  #       - !Ref Subnet1
  #       - !Ref Subnet2
  #     SecurityGroupIds:
  #       - !Ref CASTLambdasSG
  #       - !Ref CASTDatabaseSG

  # CASTSecretsManInterfaceEndpoint:
  #   Type: "AWS::EC2::VPCEndpoint"
  #   Metadata:
  #     Comment: Endpoint to Secrets Manager Service
  #   Properties:
  #     VpcEndpointType: Interface
  #     ServiceName: !Sub "com.amazonaws.${AWS::Region}.secretsmanager"
  #     VpcId: !Ref VPCId
  #     SubnetIds:
  #       - !Ref Subnet1
  #       - !Ref Subnet2
  #     SecurityGroupIds:
  #       - !Ref CASTLambdasSG
  #       - !Ref CASTDatabaseSG

  #################################################
  #############       DB         ###############
  #################################################

  CASTSecretsManagerDB:
    Type: "AWS::SecretsManager::Secret"
    UpdateReplacePolicy: Delete
    DeletionPolicy: Delete
    Properties:
      Name: !Sub ${Prefix}-secret${StackId}

      Description: AWS RDS admin credentials
      GenerateSecretString:
        SecretStringTemplate: '{"username": "postgres"}'
        GenerateStringKey: password
        PasswordLength: 32
        ExcludeCharacters: '"@/\'
      ReplicaRegions: [Region: eu-central-1]

  CASTAuroraCluster:
    Type: "AWS::RDS::DBCluster"
    UpdateReplacePolicy: Retain
    DeletionPolicy: Delete
    Properties:
      AvailabilityZones:
        - !Sub "${AWS::Region}b"
        - !Sub "${AWS::Region}a"
      BackupRetentionPeriod: 7
      MasterUsername: !Sub "{{resolve:secretsmanager:${CASTSecretsManagerDB}::username}}"
      MasterUserPassword: !Sub "{{resolve:secretsmanager:${CASTSecretsManagerDB}::password}}"
      DBClusterIdentifier: !Sub ${PrefixLowercase}db-metering${StackId}
      Engine: aurora-postgresql
      EngineVersion: "13.12"
      Port: 5432
      StorageEncrypted: true
      EnableHttpEndpoint: true
      VpcSecurityGroupIds:
        - !Ref CASTDatabaseSG
      EngineMode: serverless
      DBSubnetGroupName: !Ref CASTSubnetGroup
      DBClusterParameterGroupName: default.aurora-postgresql13

  CASTSubnetGroup:
    Type: "AWS::RDS::DBSubnetGroup"
    UpdateReplacePolicy: Delete
    Properties:
      DBSubnetGroupName: !Sub ${Prefix}subnet${StackId}
      DBSubnetGroupDescription: Test Group
      SubnetIds:
        - !Ref Subnet1
        - !Ref Subnet2

  CASTSecretAttachment:
    Type: "AWS::SecretsManager::SecretTargetAttachment"
    Properties:
      SecretId: !Ref CASTSecretsManagerDB
      TargetId: !Ref CASTAuroraCluster
      TargetType: "AWS::RDS::DBCluster"

  #################################################
  #############       MONITORING         ###############
  #################################################

  CloudWatchDashboard:
    Type: AWS::CloudWatch::Dashboard
    Properties:
      DashboardName: !Ref GeneralName
      DashboardBody: !Sub >
        {
          "widgets": [
              {
                  "height": 15,
                  "width": 24,
                  "y": 11,
                  "x": 0,
                  "type": "explorer",
                  "properties": {
                      "metrics": [
                          {
                              "metricName": "Invocations",
                              "resourceType": "AWS::Lambda::Function",
                              "stat": "Sum"
                          },
                          {
                              "metricName": "Errors",
                              "resourceType": "AWS::Lambda::Function",
                              "stat": "Sum"
                          }
                      ],
                      "labels": [
                          {
                              "key": "FunctionName",
                              "value": "${CostReportingFunction}"
                          },
                          {
                              "key": "FunctionName",
                              "value": "${MeteringFunction}"
                          }
                      ],
                      "widgetOptions": {
                          "legend": {
                              "position": "bottom"
                          },
                          "view": "timeSeries",
                          "stacked": false,
                          "rowsPerPage": 50,
                          "widgetsPerRow": 2
                      },
                      "period": 300,
                      "splitBy": "FunctionName",
                      "region": "eu-west-1"
                  }
              },
              {
                  "height": 6,
                  "width": 6,
                  "y": 5,
                  "x": 1,
                  "type": "metric",
                  "properties": {
                      "view": "timeSeries",
                      "stacked": false,
                      "metrics": [
                          [ "AWS/RDS", "DatabaseConnections", "Role", "READER", "DBClusterIdentifier", "${CASTAuroraCluster}" ],
                          [ ".", "CPUUtilization", ".", "WRITER", ".", "." ],
                          [ ".", "DatabaseConnections", ".", ".", ".", "." ],
                          [ ".", "ServerlessDatabaseCapacity", ".", ".", ".", "." ],
                          [ ".", "CPUUtilization", ".", "READER", ".", "." ]
                      ],
                      "region": "eu-west-1",
                      "title": "Database Status"
                  }
              },
              {
                  "height": 6,
                  "width": 13,
                  "y": 5,
                  "x": 9,
                  "type": "metric",
                  "properties": {
                      "sparkline": true,
                      "view": "singleValue",
                      "metrics": [
                          [ "AWS/RDS", "CPUUtilization", "DBClusterIdentifier", "aurora-postgresql-cluster" ],
                          [ ".", "ServerlessDatabaseCapacity", ".", "." ],
                          [ ".", "FreeLocalStorage", ".", "." ],
                          [ ".", "VolumeBytesUsed", ".", "." ],
                          [ ".", "DatabaseConnections", ".", "." ]
                      ],
                      "region": "eu-west-1",
                      "title": "Database status 2"
                  }
              },
              {
                  "height": 5,
                  "width": 13,
                  "y": 0,
                  "x": 6,
                  "type": "text",
                  "properties": {
                      "markdown": "# DPP CAST Monitoring Dashboard\n## All DPP-Cast components are watched from here\n\nCAST IAM Roles are  \nCAST Security groups are  \nCAST Endpoints are\n"
                  }
              },
              {
                  "height": 6,
                  "width": 6,
                  "y": 26,
                  "x": 0,
                  "type": "metric",
                  "properties": {
                      "view": "timeSeries",
                      "stacked": false,
                      "metrics": [
                          [ "AWS/CodeBuild", "Builds", "ProjectName", "${CodeBuild}" ],
                          [ ".", "SucceededBuilds", ".", "." ],
                          [ ".", "FailedBuilds", ".", "." ]
                      ],
                      "region": "eu-west-1",
                      "title": "CodeBuild Status"
                  }
              },
              {
                  "height": 6,
                  "width": 6,
                  "y": 26,
                  "x": 6,
                  "type": "metric",
                  "properties": {
                      "view": "bar",
                      "metrics": [
                          [ "AWS/Backup", "NumberOfBackupJobsCompleted", "BackupVaultName", "Default" ],
                          [ ".", "NumberOfRestoreJobsCompleted", ".", "." ]
                      ],
                      "region": "eu-west-1"
                  }
              }
          ]}
